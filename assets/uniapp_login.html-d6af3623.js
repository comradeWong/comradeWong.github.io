import{_ as t,r as p,o as e,c as o,d as n,f as a,a as c}from"./app-9ed79f46.js";const i={},l=c(`<blockquote><p>最近公司使用uniapp开发微信小程序，在此记录一下调用小程序登录的方法，以及一些封装。</p></blockquote><h1 id="实现步骤" tabindex="-1"><a class="header-anchor" href="#实现步骤" aria-hidden="true">#</a> 实现步骤</h1><h2 id="进入小程序" tabindex="-1"><a class="header-anchor" href="#进入小程序" aria-hidden="true">#</a> 进入小程序</h2><p>进入项目时，会进入uniapp的应用生命周期，在@/App.vue中的OnLaunch方法添加代码如下。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>	<span class="token function-variable function">onLaunch</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> login_res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">await</span> <span class="token function">wxLogin</span><span class="token punctuation">(</span>login_res<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调用ui-login-接口" tabindex="-1"><a class="header-anchor" href="#调用ui-login-接口" aria-hidden="true">#</a> 调用ui.login()接口</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 调用ui.login()方法，获取用户的code</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		uni<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">provider</span><span class="token operator">:</span> <span class="token string">&#39;weixin&#39;</span><span class="token punctuation">,</span>
			<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值格式</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	code<span class="token operator">:</span> <span class="token string">&quot;031iOKFa14UxVA0fwnFa1yP9r81iOKFu&quot;</span>
	errMsg<span class="token operator">:</span> <span class="token string">&quot;login:ok&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调用后端的登录接口-发送code" tabindex="-1"><a class="header-anchor" href="#调用后端的登录接口-发送code" aria-hidden="true">#</a> 调用后端的登录接口，发送code</h3><p>调用后端的登录接口，发送code，如果有toekn，携带token，返回最新的token和授权结果。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">wxLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">loginRes</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> <span class="token punctuation">{</span>
			errMsg<span class="token punctuation">,</span>
			code
		<span class="token punctuation">}</span> <span class="token operator">=</span> loginRes
		<span class="token keyword">if</span> <span class="token punctuation">(</span>errMsg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">validLogin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				code<span class="token punctuation">,</span>
				<span class="token literal-property property">sf</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> <span class="token punctuation">{</span>
					code<span class="token punctuation">,</span>
					data<span class="token punctuation">,</span>
					token
				<span class="token punctuation">}</span> <span class="token operator">=</span> res
				<span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_UNLOGIN</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// 用户未登录 存储状态并且储存返回的微信openId</span>
					uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_CODE</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span>
					uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">WX_OPEN_ID</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_LOGINED</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// 用户已登录，未进行授权</span>
					uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_CODE</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span>
					token <span class="token operator">&amp;&amp;</span> <span class="token function">setToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>
					<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token punctuation">{</span>
						<span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> data<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>
						<span class="token literal-property property">sf</span><span class="token operator">:</span> data<span class="token punctuation">.</span>sf
					<span class="token punctuation">}</span>
					uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_INFO</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_AUTHOR</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// 用户已登录，已授权</span>
					uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_CODE</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span>
					token <span class="token operator">&amp;&amp;</span> <span class="token function">setToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>
					<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token punctuation">{</span>
						<span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> data<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>
						<span class="token literal-property property">sf</span><span class="token operator">:</span> data<span class="token punctuation">.</span>sf
					<span class="token punctuation">}</span>
					uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_INFO</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span>
				<span class="token punctuation">}</span> 
				<span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>errMsg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;wx.login出错，请退出重新进入&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进入需要验证登录状态和授权状态的页面时" tabindex="-1"><a class="header-anchor" href="#进入需要验证登录状态和授权状态的页面时" aria-hidden="true">#</a> 进入需要验证登录状态和授权状态的页面时</h2><p>如果未登录，则进入登录页面；如果已登录，未授权，则弹出授权框；如果已登录，已授权，则返回状态，进入页面。在需要验证登录状态和授权状态的页面调用如下方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">checkUserAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>authStatusText <span class="token operator">=</span> res<span class="token punctuation">.</span>status<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(PS：我需要页面显示时进行状态判断，故该方法我在onShow函数中调用，具体在哪里调用，需要根据需求分析)</p><h3 id="检测用户的登录状态和授权状态" tabindex="-1"><a class="header-anchor" href="#检测用户的登录状态和授权状态" aria-hidden="true">#</a> 检测用户的登录状态和授权状态</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 检测用户的登录状态</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkUserAuth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token comment">// 用户登录的code</span>
		<span class="token keyword">const</span> userLoginCode <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_CODE</span><span class="token punctuation">)</span>
		<span class="token keyword">const</span> returnRes <span class="token operator">=</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
			<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userLoginCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			returnRes<span class="token punctuation">.</span>code <span class="token operator">=</span> userLoginCode
			returnRes<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&#39;未获取到登录状态码&#39;</span>
			<span class="token function">reject</span><span class="token punctuation">(</span>returnRes<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userLoginCode <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_ERROR</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			returnRes<span class="token punctuation">.</span>code <span class="token operator">=</span> userLoginCode
			returnRes<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&#39;异常&#39;</span>
			<span class="token function">reject</span><span class="token punctuation">(</span>returnRes<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userLoginCode <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_AUTHOR</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 用户已登录，已授权</span>
			returnRes<span class="token punctuation">.</span>code <span class="token operator">=</span> userLoginCode
			returnRes<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;已登录，已授权&#39;</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>returnRes<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userLoginCode <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_LOGINED</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 用户已登录，未授权</span>
			uni<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;您的账号尚未授权，是否进行授权？&#39;</span><span class="token punctuation">,</span>
				<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>confirm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token function">getUserProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">infoRes</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
							<span class="token keyword">const</span> saveAuthRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">saveAuthInfo</span><span class="token punctuation">(</span>infoRes<span class="token punctuation">)</span>
							returnRes<span class="token punctuation">.</span>code <span class="token operator">=</span> userLoginCode
							returnRes<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;已登录，已授权&#39;</span>
							<span class="token function">resolve</span><span class="token punctuation">(</span>returnRes<span class="token punctuation">)</span>
						<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
							console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>cancel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						returnRes<span class="token punctuation">.</span>code <span class="token operator">=</span> userLoginCode
						returnRes<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;已登录，未授权&#39;</span>
						<span class="token function">resolve</span><span class="token punctuation">(</span>returnRes<span class="token punctuation">)</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userLoginCode <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_UNLOGIN</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 如果未登录，跳转到登录页面</span>
			uni<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;您尚未登录，是否登录？&#39;</span><span class="token punctuation">,</span>
				<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					returnRes<span class="token punctuation">.</span>code <span class="token operator">=</span> userLoginCode
					returnRes<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;未登录&#39;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>confirm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
							<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;pages/login/index&#39;</span><span class="token punctuation">,</span>
						<span class="token punctuation">}</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>cancel<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
					<span class="token function">resolve</span><span class="token punctuation">(</span>returnRes<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（PS: 方法中的code为一些自己定义的常量，文末附有文件，可自行查看）</p><h2 id="获取用户信息授权" tabindex="-1"><a class="header-anchor" href="#获取用户信息授权" aria-hidden="true">#</a> 获取用户信息授权</h2><p>在上一步中，如果已登录，未授权，则弹出授权框。此时需要调用uni.getUserProfile()接口，然后将获取到的用户信息发送到后端，并保存授权信息。</p><h3 id="调用uni-getuserprofile" tabindex="-1"><a class="header-anchor" href="#调用uni-getuserprofile" aria-hidden="true">#</a> 调用uni.getUserProfile()</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取用户信息。每次请求都会弹出授权窗口，用户同意后返回 userInfo。</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getUserProfile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		uni<span class="token punctuation">.</span><span class="token function">getUserProfile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token string">&#39;用户登录&#39;</span><span class="token punctuation">,</span>
			<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">info_res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token function">resolve</span><span class="token punctuation">(</span>info_res<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="保存授权信息" tabindex="-1"><a class="header-anchor" href="#保存授权信息" aria-hidden="true">#</a> 保存授权信息</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 6.保存授权信息</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">saveAuthInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> <span class="token punctuation">{</span>
			nickName<span class="token punctuation">,</span>
			gender<span class="token punctuation">,</span>
			city<span class="token punctuation">,</span>
			province<span class="token punctuation">,</span>
			country<span class="token punctuation">,</span>
			avatarUrl
		<span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>userInfo
		
		<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">nickName</span><span class="token operator">:</span> nickName<span class="token punctuation">,</span>
			<span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> avatarUrl<span class="token punctuation">,</span>
			<span class="token literal-property property">gender</span><span class="token operator">:</span> gender<span class="token punctuation">,</span>
			<span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>city <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">:</span> city<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>province <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">:</span> province<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>country <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">:</span> country<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">}</span>
		<span class="token function">saveWXAuthInfo</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_CODE</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>code<span class="token punctuation">)</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用户一键登录-获取手机号" tabindex="-1"><a class="header-anchor" href="#用户一键登录-获取手机号" aria-hidden="true">#</a> 用户一键登录（获取手机号）</h2><p>如果验证登录状态，结果为未登录，则跳转到登录页。</p><h3 id="登录页代码" tabindex="-1"><a class="header-anchor" href="#登录页代码" aria-hidden="true">#</a> 登录页代码</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- #ifdef MP-WEIXIN --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login-btn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">plain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getPhoneNumber<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@getphonenumber</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getPhoneNumber<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>微信一键登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- #endif --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// methods 中新增方法</span>
<span class="token function">getPhoneNumber</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">getPhoneNumber</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">sendPhoneLogin</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				uni<span class="token punctuation">.</span><span class="token function">navigateBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取用户手机号-并发送给后端" tabindex="-1"><a class="header-anchor" href="#获取用户手机号-并发送给后端" aria-hidden="true">#</a> 获取用户手机号，并发送给后端</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取手机号</span>
<span class="token comment">// 处理 getPhoneNubmber 操作，如果获取失败返回reject</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getPhoneNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">const</span> <span class="token punctuation">{</span>
			detail
		<span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>
		<span class="token comment">// 1用户已授权 0：用户已拒绝</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>detail<span class="token punctuation">.</span>errMsg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>detail<span class="token punctuation">.</span>errMsg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">reject</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span>errMsg<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token comment">// 15.获取手机号之后，将相关信息传往后端</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sendPhoneLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">sf</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">encryptedData</span><span class="token operator">:</span> info<span class="token punctuation">.</span>encryptedData<span class="token punctuation">,</span>
			<span class="token literal-property property">iv</span><span class="token operator">:</span> info<span class="token punctuation">.</span>iv<span class="token punctuation">,</span>
			<span class="token literal-property property">openId</span><span class="token operator">:</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">WX_OPEN_ID</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token function">phoneLogin</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> <span class="token punctuation">{</span>
				code<span class="token punctuation">,</span>
				data<span class="token punctuation">,</span>
				token
			<span class="token punctuation">}</span> <span class="token operator">=</span> res
			<span class="token keyword">if</span><span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token constant">API_RETURN_CODE</span><span class="token punctuation">.</span><span class="token constant">USER_ERROR</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">reject</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token punctuation">{</span>
				<span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> data<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>
				<span class="token literal-property property">sf</span><span class="token operator">:</span> data<span class="token punctuation">.</span>sf
			<span class="token punctuation">}</span>
			uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_INFO</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span>
			uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEYS</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_CODE</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span>
			<span class="token function">setToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关接口" tabindex="-1"><a class="header-anchor" href="#相关接口" aria-hidden="true">#</a> 相关接口</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;@/utils/request.javascript&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">validLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/wx/validLogin&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">saveWXAuthInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/wx/saveUserProfile&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">phoneLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/wx/phoneLogin&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
		<span class="token comment">// dataType: &#39;&#39;,</span>
		<span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="相关代码文件" tabindex="-1"><a class="header-anchor" href="#相关代码文件" aria-hidden="true">#</a> 相关代码文件</h1>`,35),u={href:"https://file-1252351428.cos.ap-beijing.myqcloud.com/token.js",target:"_blank",rel:"noopener noreferrer"},r=n("strong",null,"setToken封装",-1),k={href:"https://file-1252351428.cos.ap-beijing.myqcloud.com/MinRequest.js",target:"_blank",rel:"noopener noreferrer"},d=n("strong",null,"MiniRequest封装",-1),v={href:"https://file-1252351428.cos.ap-beijing.myqcloud.com/request.js",target:"_blank",rel:"noopener noreferrer"},m=n("strong",null,"request封装",-1),b={href:"https://file-1252351428.cos.ap-beijing.myqcloud.com/wx.js",target:"_blank",rel:"noopener noreferrer"},g=n("strong",null,"wx相关方法封装",-1),f={href:"https://file-1252351428.cos.ap-beijing.myqcloud.com/constant.js",target:"_blank",rel:"noopener noreferrer"},y=n("strong",null,"constant常量封装",-1);function h(w,_){const s=p("ExternalLinkIcon");return e(),o("div",null,[l,n("ul",null,[n("li",null,[n("p",null,[n("a",u,[r,a(s)])])]),n("li",null,[n("p",null,[n("a",k,[d,a(s)])])]),n("li",null,[n("p",null,[n("a",v,[m,a(s)])])]),n("li",null,[n("p",null,[n("a",b,[g,a(s)])])]),n("li",null,[n("p",null,[n("a",f,[y,a(s)])])])])])}const E=t(i,[["render",h],["__file","uniapp_login.html.vue"]]);export{E as default};
