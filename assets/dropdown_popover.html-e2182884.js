import{_ as p,r as e,o as d,c,d as n,e as t,f as a,a as o}from"./app-b9792811.js";const l={},i=n("h1",{id:"flutter单选多选、popover的实现",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flutter单选多选、popover的实现","aria-hidden":"true"},"#"),t(" Flutter单选多选、Popover的实现")],-1),u=n("p",null,[t("最近开发Flutter项目时发现，Flutter的组件"),n("code",null,"DropdownButton"),t("使用时会有一些使用上的局限性（尤其是在Flutter Web中），所以在项目开发中，使用了两个组件做为"),n("code",null,"DropdownButton"),t("组件的补充和拓展。本文旨在介绍组件，比较应用向，如果对组件想要更深入了解，请阅读官方文档。")],-1),r=n("h2",{id:"dropdown-search",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dropdown-search","aria-hidden":"true"},"#"),t(" dropdown_search")],-1),k={href:"https://pub.dev/packages/dropdown_search",target:"_blank",rel:"noopener noreferrer"},m={href:"https://morioh.com/p/bd8d453ec55e",target:"_blank",rel:"noopener noreferrer"},v=o(`<h3 id="单选列表" tabindex="-1"><a class="header-anchor" href="#单选列表" aria-hidden="true">#</a> 单选列表</h3><table><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>items</td><td><code>List&lt;T&gt;</code></td><td>本地设置的选项列表</td></tr><tr><td>popupProps</td><td><code>PopupProps</code></td><td>popup的设置class</td></tr><tr><td>itemAsString</td><td><code>DropdownSearchItemAsString&lt;T&gt; </code></td><td>自定义options中显示的名称</td></tr><tr><td>onChanged</td><td><code>ValueChanged&lt;T?&gt;?</code></td><td>当一个item被选中后的回调</td></tr><tr><td>selectedItem</td><td><code>T?</code></td><td>单选时选中对象</td></tr><tr><td>selectedItems</td><td><code>List&lt;T&gt;</code></td><td>多选的时候选中的列表</td></tr></tbody></table><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Expanded</span><span class="token punctuation">(</span>  
  child<span class="token punctuation">:</span> <span class="token class-name">DropdownSearch</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LabelList</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>  
    items<span class="token punctuation">:</span> options<span class="token punctuation">,</span>  
    popupProps<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">PopupProps</span><span class="token punctuation">.</span><span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    itemAsString<span class="token punctuation">:</span> <span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> option<span class="token punctuation">.</span>labelName<span class="token punctuation">,</span>  
    onChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        selectedLabelList <span class="token operator">=</span> value<span class="token operator">!</span><span class="token punctuation">;</span>  
        valueOptions <span class="token operator">=</span> value<span class="token punctuation">.</span>labelValues<span class="token punctuation">;</span>  
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    selectedItem<span class="token punctuation">:</span> selectedLabelList<span class="token punctuation">,</span>  
  <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样你就得到了一个简单不带筛选功能的单选Select。 <img src="https://raw.githubusercontent.com/comradeWong/ImageStorageService/master/img/Snipaste_2023-01-17_12-29-54.png" alt="" loading="lazy"></p><h3 id="多选列表" tabindex="-1"><a class="header-anchor" href="#多选列表" aria-hidden="true">#</a> 多选列表</h3><table><thead><tr><th>参数名</th><th>类型</th><th>描述</th><th></th></tr></thead><tbody><tr><td>items</td><td><code>List&lt;T&gt;</code></td><td>本地设置的选项列表</td><td></td></tr><tr><td>popupProps</td><td><code>PopupPropsMultiSelection</code></td><td>popup的设置class</td><td></td></tr><tr><td>itemAsString</td><td><code>DropdownSearchItemAsString&lt;T&gt; </code></td><td>自定义options中显示的名称</td><td></td></tr><tr><td>onChanged</td><td><code>ValueChanged&lt;T?&gt;?</code></td><td>当一个item被选中后的回调</td><td></td></tr><tr><td>selectedItems</td><td><code>List&lt;T&gt;</code></td><td>多选的时候选中的列表</td><td></td></tr><tr><td>compareFn</td><td><code>DropdownSearchCompareFn&lt;T&gt;?</code></td><td>比对items与selectedItems的参数（用于回显选中状态）</td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Expanded</span><span class="token punctuation">(</span>  
  child<span class="token punctuation">:</span> <span class="token class-name">DropdownSearch</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Trigger</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token function">multiSelection</span><span class="token punctuation">(</span>  
    items<span class="token punctuation">:</span> valueOptions<span class="token punctuation">,</span>  
    popupProps<span class="token punctuation">:</span> <span class="token class-name">PopupPropsMultiSelection</span><span class="token punctuation">.</span><span class="token function">menu</span><span class="token punctuation">(</span>  
      showSearchBox<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  
      searchFieldProps<span class="token punctuation">:</span> <span class="token class-name">TextFieldProps</span><span class="token punctuation">(</span>  
          controller<span class="token punctuation">:</span> <span class="token class-name">TextEditingController</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
          decoration<span class="token punctuation">:</span>  
              <span class="token keyword">const</span> <span class="token class-name">InputDecoration</span><span class="token punctuation">(</span>hintText<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;搜索标签&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    <span class="token punctuation">)</span><span class="token punctuation">,</span>    
    itemAsString<span class="token punctuation">:</span> <span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> option<span class="token punctuation">.</span>value<span class="token punctuation">,</span>  
    onChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>selectedList<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        triggerSelected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>selectedList<span class="token punctuation">]</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span><span class="token punctuation">,</span>    
    selectedItems<span class="token punctuation">:</span> triggerSelected<span class="token punctuation">,</span>  
    compareFn<span class="token punctuation">:</span> <span class="token punctuation">(</span>item1<span class="token punctuation">,</span> item2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  
        item1<span class="token punctuation">.</span>valueId <span class="token operator">==</span> item2<span class="token punctuation">.</span>valueId<span class="token punctuation">,</span>  
  <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样你也就获得了一个带有筛选功能多选框组。 <img src="https://raw.githubusercontent.com/comradeWong/ImageStorageService/master/img/Snipaste_2023-01-17_14-09-56.png" alt="" loading="lazy"></p><h2 id="dropdown-button2" tabindex="-1"><a class="header-anchor" href="#dropdown-button2" aria-hidden="true">#</a> dropdown_button2</h2>`,9),b={href:"https://pub.dev/packages/dropdown_button2",target:"_blank",rel:"noopener noreferrer"},h=o(`<p>（其实官网文档写的很详细，下面提供参数翻译和一个小例子）</p><table><thead><tr><th>Option</th><th>Description</th><th>Type</th><th>Required</th></tr></thead><tbody><tr><td>items</td><td>用户可以选择的项目列表</td><td><code>List&lt;DropdownMenuItem&gt;</code></td><td>Yes</td></tr><tr><td>hint</td><td>在用户选择一个项目之前显示的占位符</td><td>Widget</td><td>No</td></tr><tr><td>disabledHint</td><td>如果下拉菜单被禁用，显示的占位符。</td><td>Widget</td><td>No</td></tr><tr><td>value</td><td>当前选择的[DropdownMenuItem]的值</td><td>T</td><td>No</td></tr><tr><td>onChanged</td><td>当用户选择一个项目时被调用</td><td>ValueChanged&lt;T?&gt;</td><td>No</td></tr><tr><td>onMenuStateChange</td><td>当下拉菜单被打开或关闭时被调用</td><td>Function(bool isOpen)</td><td>No</td></tr><tr><td>selectedItemBuilder</td><td>所选项目将如何在按钮上显示</td><td>DropdownButtonBuilder</td><td>No</td></tr><tr><td>buttonHeight</td><td>按钮的高度</td><td>double</td><td>No</td></tr><tr><td>buttonWidth</td><td>按钮的宽度</td><td>double</td><td>No</td></tr><tr><td>buttonPadding</td><td>按钮的内部填充物</td><td>EdgeInsetsGeometry</td><td>No</td></tr><tr><td>buttonDecoration</td><td>按钮的装饰</td><td>BoxDecoration</td><td>No</td></tr><tr><td>buttonElevation</td><td>按钮的高度</td><td>int</td><td>No</td></tr><tr><td>buttonSplashColor</td><td>按钮InkWell的亮光颜色</td><td>Color</td><td>No</td></tr><tr><td>buttonHighlightColor</td><td>按钮InkWell的高光色</td><td>Color</td><td>No</td></tr><tr><td>buttonOverlayColor</td><td>按钮InkWell的叠加颜色</td><td>MaterialStateProperty&lt;Color?&gt;</td><td>No</td></tr><tr><td>icon</td><td>下拉按钮的后缀图标</td><td>Widget</td><td>No</td></tr><tr><td>iconOnClick</td><td>打开下拉菜单时显示不同的图标</td><td>Widget</td><td>No</td></tr><tr><td>iconSize</td><td>图标的大小</td><td>double</td><td>No</td></tr><tr><td>iconEnabledColor</td><td>如果按钮被激活，图标的颜色</td><td>Color</td><td>No</td></tr><tr><td>iconDisabledColor</td><td>如果按钮被禁用，图标的颜色</td><td>Color</td><td>No</td></tr><tr><td>itemHeight</td><td>菜单项的高度</td><td>double</td><td>No</td></tr><tr><td>itemPadding</td><td>菜单项的padding</td><td>EdgeInsetsGeometry</td><td>No</td></tr><tr><td>itemSplashColor</td><td>项目的InkWell的亮色</td><td>Color</td><td>No</td></tr><tr><td>itemHighlightColor</td><td>项目的InkWell的高亮颜色</td><td>Color</td><td>No</td></tr><tr><td>dropdownMaxHeight</td><td>下拉菜单的最大高度</td><td>double</td><td>No</td></tr><tr><td>dropdownWidth</td><td>下拉菜单的宽度</td><td>double</td><td>No</td></tr><tr><td>dropdownPadding</td><td>下拉菜单的内部padding</td><td>EdgeInsetsGeometry</td><td>No</td></tr><tr><td>dropdownScrollPadding</td><td>包括滚动条在内的下拉菜单的内部padding</td><td>EdgeInsetsGeometry</td><td>No</td></tr><tr><td>dropdownDecoration</td><td>下拉菜单的装饰</td><td>BoxDecoration</td><td>No</td></tr><tr><td>dropdownDirection</td><td>下拉菜单相对于按钮的方向</td><td>DropdownDirection</td><td>No</td></tr><tr><td>dropdownElevation</td><td>下拉菜单的高度</td><td>int</td><td>No</td></tr><tr><td>selectedItemHighlightColor</td><td>当前所选项目的高亮颜色</td><td>Color</td><td>No</td></tr><tr><td>scrollbarRadius</td><td>滚动条边角的半径</td><td>Radius</td><td>No</td></tr><tr><td>scrollbarThickness</td><td>滚动条的厚度</td><td>double</td><td>No</td></tr><tr><td>scrollbarAlwaysShow</td><td>始终显示滚动条，即使是在没有滚动的情况下</td><td>bool</td><td>No</td></tr><tr><td>offset</td><td>改变下拉菜单的位置</td><td>Offset</td><td>No</td></tr><tr><td>customButton</td><td>使用自定义的小部件，如图标、图片等，而不是默认的按钮。</td><td>Widget</td><td>No</td></tr><tr><td>customItemsHeights</td><td>为菜单项使用不同的预定义高度（对添加分隔符很有用）。</td><td>List</td><td>No</td></tr><tr><td>isExpanded</td><td>使按钮的内部内容扩大（设置为真以避免长文本溢出）。</td><td>bool</td><td>No</td></tr><tr><td>openWithLongPress</td><td>在长按时打开下拉菜单，而不是轻触。</td><td>bool</td><td>No</td></tr><tr><td>dropdownOverButton</td><td>在按钮上方而不是下方打开下拉菜单</td><td>bool</td><td>No</td></tr><tr><td>dropdownFullScreen</td><td>在全屏模式下打开下拉菜单（在AppBar和TabBar上面）</td><td>bool</td><td>No</td></tr><tr><td>focusColor</td><td>使用传统界面（键盘和鼠标）输入焦点时的按钮颜色</td><td>Color</td><td>No</td></tr><tr><td>barrierDismissible</td><td>你是否可以通过点击模态障碍物来取消这一途径</td><td>bool</td><td>No</td></tr><tr><td>barrierColor</td><td>模态屏障的颜色。如果这个颜色为空，屏障将是透明的</td><td>Color</td><td>No</td></tr><tr><td>barrierLabel</td><td>用于可撤销障碍物的语义标签</td><td>String</td><td>No</td></tr><tr><td>searchController</td><td>用于可搜索下拉菜单的控制器，如果为空，那么它将作为普通下拉菜单执行。</td><td>TextEditingController</td><td>No</td></tr><tr><td>searchInnerWidget</td><td>用于可搜索下拉菜单顶部的部件，用于可搜索下拉菜单的部件。</td><td>Widget</td><td>No</td></tr><tr><td>searchMatchFn</td><td>用于可搜索下拉菜单的匹配函数，如果为空，将使用defaultFn</td><td>SearchMatchFn</td><td>No</td></tr></tbody></table><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">DropdownButtonHideUnderline</span><span class="token punctuation">(</span>  
  child<span class="token punctuation">:</span> <span class="token class-name">DropdownButton2</span><span class="token punctuation">(</span>  
    isExpanded<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  
    hint<span class="token punctuation">:</span> <span class="token class-name">Row</span><span class="token punctuation">(</span>  
      children<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token punctuation">[</span>  
        <span class="token class-name">Expanded</span><span class="token punctuation">(</span>  
          child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>  
            <span class="token string-literal"><span class="token string">&#39;更多&#39;</span></span><span class="token punctuation">,</span>  
            style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>  
              fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span>  
              fontWeight<span class="token punctuation">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>bold<span class="token punctuation">,</span>  
              color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span>  
            <span class="token punctuation">)</span><span class="token punctuation">,</span>            overflow<span class="token punctuation">:</span> <span class="token class-name">TextOverflow</span><span class="token punctuation">.</span>ellipsis<span class="token punctuation">,</span>  
          <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    
          items<span class="token punctuation">:</span> _items <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>  
          <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">DropdownMenuItem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MoreOption</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>  
              value<span class="token punctuation">:</span> e<span class="token punctuation">,</span>  
              child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>  
                e<span class="token punctuation">.</span>label<span class="token punctuation">,</span>  
                style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>  
                  fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span>  
                  fontWeight<span class="token punctuation">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>bold<span class="token punctuation">,</span>  
                  color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black45<span class="token punctuation">,</span>  
                <span class="token punctuation">)</span><span class="token punctuation">,</span>                
                overflow<span class="token punctuation">:</span> <span class="token class-name">TextOverflow</span><span class="token punctuation">.</span>ellipsis<span class="token punctuation">,</span>  
              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    <span class="token comment">// value: _selectedValue,  </span>
    onChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      item<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">onTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span><span class="token punctuation">,</span>    
    buttonHeight<span class="token punctuation">:</span> <span class="token number">36</span><span class="token punctuation">,</span>  
    buttonWidth<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>  
    buttonPadding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span> right<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    buttonDecoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>  
      borderRadius<span class="token punctuation">:</span> <span class="token class-name">BorderRadius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
      <span class="token comment">// border: Border  </span>
      color<span class="token punctuation">:</span> kPrimaryColor<span class="token punctuation">,</span>  
    <span class="token punctuation">)</span><span class="token punctuation">,</span>    
    buttonElevation<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  
    iconDisabledColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>grey<span class="token punctuation">,</span>  
    iconEnabledColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span>  
    itemHeight<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>  
    itemPadding<span class="token punctuation">:</span>  
        <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span> right<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    dropdownMaxHeight<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span>  
    dropdownWidth<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  
    dropdownPadding<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  
    dropdownDecoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>  
      borderRadius<span class="token punctuation">:</span> <span class="token class-name">BorderRadius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
      color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span>  
    <span class="token punctuation">)</span><span class="token punctuation">,</span>    
    dropdownElevation<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>  
    scrollbarRadius<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    scrollbarThickness<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>  
    scrollbarAlwaysShow<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  
    offset<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Offset</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
  <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/comradeWong/ImageStorageService/master/img/Snipaste_2023-01-17_14-57-49.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="appflowy-popover" tabindex="-1"><a class="header-anchor" href="#appflowy-popover" aria-hidden="true">#</a> appflowy_popover</h2><p>上述两个组件，可以基本实现下拉框的功能，但是不能手动触发popover，这里推荐一个开源项目封装的popover，以供参考：</p>`,6),g={href:"https://github.com/AppFlowy-IO/AppFlowy/blob/main/frontend/app_flowy/packages/appflowy_popover/README.md",target:"_blank",rel:"noopener noreferrer"};function w(f,_){const s=e("ExternalLinkIcon");return d(),c("div",null,[i,u,r,n("p",null,[t("官方文档地址："),n("a",k,[t("https://pub.dev/packages/dropdown_search"),a(s)]),t(" 参考资料："),n("a",m,[t("https://morioh.com/p/bd8d453ec55e"),a(s)])]),v,n("p",null,[t("官方文档地址："),n("a",b,[t("https://pub.dev/packages/dropdown_button2"),a(s)])]),h,n("p",null,[n("a",g,[t("AppFlowy"),a(s)])])])}const S=p(l,[["render",w],["__file","dropdown_popover.html.vue"]]);export{S as default};
